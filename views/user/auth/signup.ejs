<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Sign up</title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH"
      crossorigin="anonymous"
    />
    <link
      href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css"
      rel="stylesheet"
    />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/boxicons/2.1.4/css/boxicons.min.css"
    />
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.all.min.js"></script>

    <style>
      :root {
        --light-bg: #F7F7F7;
        --accent: #FFB22C;
        --secondary: #854836;
        --dark: #4a4848;
      }
      
      body {
        background-color: var(--light-bg);
        color: var(--dark);
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      }
      
      .modal-content {
        background-color: white;
        border: none;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
      }
      
      .modal-header {
        border-bottom: 2px solid var(--accent);
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 1.5rem 1.5rem;
      }
      
      .modal-header h1 {
        color: var(--secondary);
        margin: 0;
      }
      
      .btn-close {
        color: var(--dark);
        opacity: 0.7;
        box-shadow: none;
        position: relative;
        padding: 0.5rem;
      }
      
      .btn-close:hover {
        opacity: 1;
      }
      
      .form-control {
        border: 1px solid #ddd;
        background-color: var(--light-bg);
      }
      
      .form-control:focus {
        border-color: var(--accent);
        box-shadow: 0 0 0 0.25rem rgba(255, 178, 44, 0.25);
      }
      
      .btn-primary {
        background-color: var(--accent);
        border-color: var(--accent);
        color: var(--dark);
        font-weight: 600;
      }
      
      .btn-primary:hover {
        background-color: #e09a1e;
        border-color: #e09a1e;
      }
      
      .btn-outline-secondary {
        color: var(--secondary);
        border-color: var(--secondary);
      }
      
      .btn-outline-secondary:hover {
        background-color: var(--secondary);
        color: white;
      }
      
      hr {
        background-color: var(--secondary);
        opacity: 0.3;
      }
      
      footer {
        background-color: var(--dark);
        color: var(--light-bg);
        padding: 20px 0;
        margin-top: 40px;
      }
      
      .errorMessage {
        color: #d32f2f;
        font-size: 0.75rem;
        display: none;
      }
      
      .password-toggle {
        position: absolute;
        right: 10px;
        top: 50%;
        transform: translateY(-50%);
        cursor: pointer;
        font-size: 1.2rem;
        color: var(--secondary);
      }

      .password-toggle:hover {
        color: var(--accent);
      }

      .loader {
        width: 24px;
        height: 24px;
        border-radius: 50%;
        border-top: 3px solid var(--light-bg);
        border-right: 3px solid transparent;
        box-sizing: border-box;
        animation: rotation 1s linear infinite;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
      }

      .loader::after {
        content: "";
        box-sizing: border-box;
        position: absolute;
        left: 0;
        top: 0;
        width: 24px;
        height: 24px;
        border-radius: 50%;
        border-bottom: 3px solid var(--secondary);
        border-left: 3px solid transparent;
      }

      @keyframes rotation {
        0% {
          transform: translate(-50%, -50%) rotate(0deg);
        }
        100% {
          transform: translate(-50%, -50%) rotate(360deg);
        }
      }

      #submitButton .button-text {
        transition: visibility 0s linear 0s, opacity 0.2s ease;
      }

      #submitButton.loading .button-text {
        visibility: hidden;
        opacity: 0;
      }

      #submitButton.loading .loader {
        display: inline-block;
      }

      #submitButton {
        min-height: calc(1.5em + 1rem + 2px);
      }
      
      .header-logo {
        padding: 7px 0;
      }
      
      .form-check-input:checked {
        background-color: var(--accent);
        border-color: var(--accent);
      }
      
      a {
        color: var(--secondary);
        text-decoration: none;
      }
      
      a:hover {
        color: var(--accent);
        text-decoration: underline;
      }
      
      small.text-body-secondary {
        color: var(--secondary) !important;
      }
      
      .header-container {
        background-color: var(--dark);
        padding: 5px 0;
      }
    </style>
  </head>
  <body>
    <!-- Header Section Begin -->
    <div class="header-container">
      <div class="container d-flex justify-content-center">
        <div class="header-logo">
          <a href="/">
            <img src="img/Logo2.png" height="60rem" alt="Logo" />
          </a>
        </div>
      </div>
    </div>
    <!-- Header Section End -->

    <div class="container py-5">
      <div class="row justify-content-center">
        <div class="col-md-6">
          <div class="modal-content rounded-4 shadow">
            <div class="modal-header p-5 pb-4">
              <h1 class="fw-bold fs-2">Sign up for free</h1>
              <a href="/" class="btn-close" aria-label="Close"></a>
            </div>
            <div class="modal-body p-5 pt-0">
              <form id="signForm" method="post" action="/signup">
                <div class="form-floating mb-3">
                  <input
                    type="text"
                    name="name"
                    class="form-control rounded-3"
                    id="floatingInput"
                    placeholder="name@example.com"
                  />
                  <label for="floatingInput">Name</label>
                  <div class="errorMessage" id="error1"></div>
                </div>

                <div class="form-floating mb-3">
                  <input
                    type="email"
                    name="email"
                    class="form-control rounded-3"
                    id="floatingInput"
                    placeholder="name@example.com"
                  />
                  <label for="floatingInput">Email address</label>
                  <div class="errorMessage" id="error2"></div>
                </div>

                <div class="form-floating mb-3">
                  <input
                    type="text"
                    name="phone"
                    class="form-control rounded-3"
                    id="floatingInput"
                    placeholder="name@example.com"
                  />
                  <label for="floatingInput">Mobile No:</label>
                  <div class="errorMessage" id="error3"></div>
                </div>

                <div class="form-floating mb-3 position-relative">
                  <input
                    type="password"
                    name="password"
                    class="form-control rounded-3"
                    id="floatingPassword"
                    placeholder="Password"
                  />
                  <label for="floatingPassword">Password</label>
                  <i class="bx bx-show password-toggle" id="togglePassword"></i>
                  <div class="errorMessage" id="error4"></div>
                </div>

                <div class="form-floating mb-3 position-relative">
                  <input
                    type="password"
                    name="confirm"
                    class="form-control rounded-3"
                    id="floatingConfirmPassword"
                    placeholder="Confirm Password"
                  />
                  <label for="floatingConfirmPassword">Confirm Password</label>
                  <i
                    class="bx bx-show password-toggle"
                    id="toggleConfirmPassword"
                  ></i>
                  <div class="errorMessage" id="error5"></div>
                </div>

                <div class="form-check form-switch mb-3">
                  <input class="form-check-input" type="checkbox" id="referralToggle">
                  <label class="form-check-label" for="referralToggle">I have a referral code</label>
                </div>
                
                <div class="form-floating mb-3" id="referralCodeField" style="display: none;">
                  <input
                    type="text"
                    name="referralCode"
                    class="form-control rounded-3"
                    id="floatingReferral"
                    placeholder="Referral Code"
                  />
                  <label for="floatingReferral">Referral Code</label>
                  <div class="errorMessage" id="error6"></div>
                </div>

                <button
                  class="w-100 mb-2 btn btn-lg rounded-3 btn-primary position-relative"
                  type="submit"
                  id="submitButton"
                >
                  <span class="button-text">Sign up</span>
                  <span
                    class="loader"
                    id="buttonLoader"
                    style="display: none"
                  ></span>
                </button>

                <small class="text-body-secondary"
                  >If already a user <a href="/login">Click here.</a></small
                >
                <hr class="my-4" />
                <h2 class="fs-5 fw-bold mb-3">Or use a third-party</h2>
                <a href="/auth/google">
                  <button
                    class="w-100 py-2 mb-2 btn btn-outline-secondary rounded-3"
                    type="button"
                  >
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      width="24"
                      height="24"
                      viewBox="0 0 24 24"
                      style="fill: #854836"
                    >
                      <path
                        d="M20.283 10.356h-8.327v3.451h4.792c-.446 2.193-2.313 3.453-4.792 3.453a5.27 5.27 0 0 1-5.279-5.28 5.27 5.27 0 0 1 5.279-5.279c1.259 0 2.397.447 3.29 1.178l2.6-2.599c-1.584-1.381-3.615-2.233-5.89-2.233a8.908 8.908 0 0 0-8.934 8.934 8.907 8.907 0 0 0 8.934 8.934c4.467 0 8.529-3.249 8.529-8.934 0-.528-.081-1.097-.202-1.625z"
                      ></path>
                    </svg>
                    Sign up with Google
                  </button>
                </a>
              </form>
            </div>
          </div>
        </div>
      </div>
    </div>

    <footer class="text-center py-4">
      <div class="container">
        <span>Copyright &copy; Your Website 2025</span>
      </div>
    </footer>

    <script>
      // Toggle referral code field visibility
      const referralToggle = document.getElementById('referralToggle');
      const referralCodeField = document.getElementById('referralCodeField');

      referralToggle.addEventListener('change', function() {
        if (this.checked) {
          referralCodeField.style.display = 'block';
        } else {
          referralCodeField.style.display = 'none';
          document.getElementById('floatingReferral').value = ''; // Clear the input when hidden
        }
      });
      
      document.addEventListener("DOMContentLoaded", function () {
        function togglePasswordVisibility(toggleBtn, inputField) {
          toggleBtn.addEventListener("click", function () {
            if (inputField.type === "password") {
              inputField.type = "text";
              toggleBtn.classList.replace("bx-show", "bx-hide");
            } else {
              inputField.type = "password";
              toggleBtn.classList.replace("bx-hide", "bx-show");
            }
          });
        }

        const passwordInput = document.getElementById("floatingPassword");
        const confirmPasswordInput = document.getElementById(
          "floatingConfirmPassword"
        );
        const togglePassword = document.getElementById("togglePassword");
        const toggleConfirmPassword = document.getElementById(
          "toggleConfirmPassword"
        );
        const submitButton = document.getElementById("submitButton");

        togglePasswordVisibility(togglePassword, passwordInput);
        togglePasswordVisibility(toggleConfirmPassword, confirmPasswordInput);
      });

      document.addEventListener("DOMContentLoaded", function () {
        const nameId = document.querySelector("input[name='name']");
        const emailId = document.querySelector("input[name='email']");
        const phoneId = document.querySelector("input[name='phone']");
        const passkey = document.querySelector("input[name='password']");
        const confirmKey = document.querySelector("input[name='confirm']");

        const error1 = document.getElementById("error1");
        const error2 = document.getElementById("error2");
        const error3 = document.getElementById("error3");
        const error4 = document.getElementById("error4");
        const error5 = document.getElementById("error5");

        const signForm = document.getElementById("signForm");

        signForm.addEventListener("submit", function (e) {
          let isValid = true;

          const nameVal = nameId.value.trim();
          const namePattern = /^[A-Za-z\s]+$/;
          if (nameVal === "") {
            error1.style.display = "block";
            error1.innerHTML = "Please enter your name";
            isValid = false;
          } else if (!namePattern.test(nameVal)) {
            error1.style.display = "block";
            error1.innerHTML = "Name can only contain letters and spaces";
            isValid = false;
          } else {
            error1.style.display = "none";
          }

          const emailVal = emailId.value.trim();
          const emailPattern =
            /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
          if (!emailPattern.test(emailVal)) {
            error2.style.display = "block";
            error2.innerHTML = "Invalid email format";
            isValid = false;
          } else {
            error2.style.display = "none";
          }

          const phoneVal = phoneId.value.trim();
          if (phoneVal === "") {
            error3.style.display = "block";
            error3.innerHTML = "Please enter your phone number";
            isValid = false;
          } else if (!/^\d{10}$/.test(phoneVal)) {
            error3.style.display = "block";
            error3.innerHTML = "Phone number must be exactly 10 digits";
            isValid = false;
          } else {
            error3.style.display = "none";
          }

          const passVal = passkey.value.trim();
          const confirmVal = confirmKey.value.trim();
          const alphaNumericPattern =
            /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/;

          if (!alphaNumericPattern.test(passVal)) {
            error4.style.display = "block";
            error4.innerHTML =
              "Password must be at least 8 characters long and include uppercase, lowercase, a number, and a special character.";
            isValid = false;
          } else {
            error4.style.display = "none";
          }

          if (passVal !== confirmVal) {
            error5.style.display = "block";
            error5.innerHTML = "Passwords do not match";
            isValid = false;
          } else {
            error5.style.display = "none";
          }

          if (!isValid) {
            e.preventDefault();
          } else {
            submitButton.disabled = true;
            submitButton.classList.add("loading");
            const buttonLoader = document.getElementById('buttonLoader');
            if (buttonLoader) {
              buttonLoader.style.display = 'inline-block'; // Override the inline style="display: none;"
            }
          }
        });
      });
    </script>
    <% if (messages.error) { %>
    <script>
      Swal.fire({
        icon: "error",
        title: "Oops...",
        text: "<%= messages.error[0] %>",
        showCancelButton: true, // Adds a "Cancel" button
        cancelButtonText: "Cancel", // Text for the primary action button
        confirmButtonText: "Go to Login", // Text for the cancel button
      }).then((result) => {
        // Handle the user's choice
        if (result.isConfirmed) {
          // Redirect to the login page if the "Go to Login" button is clicked
          window.location.href = "/login"; // Replace '/login' with your actual login URL
        }
      });
    </script>
    <% } %> <% if (messages.success) { %>
    <script>
      const Toast = Swal.mixin({
        toast: true,
        position: "top-end",
        showConfirmButton: false,
        timer: 3000,
        timerProgressBar: true,
        didOpen: (toast) => {
          toast.onmouseenter = Swal.stopTimer;
          toast.onmouseleave = Swal.resumeTimer;
        },
      });
      Toast.fire({
        icon: "success",
        title: "<%= messages.success[0] %>",
      });
    </script>
    <% } %>
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
      crossorigin="anonymous"
    ></script>
  </body>
</html>