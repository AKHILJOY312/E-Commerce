<%- include("../../views/partials/admin/header.ejs") %>

<!-- Begin Page Content -->
<div class="container-fluid">
  <!-- Page Heading -->
  <div class="d-flex justify-content-between align-items-center mb-4">
    <h1 class="h3 mb-0 text-gray-800">Order Details: <%= order.order_number %></h1>
    <div class="d-flex align-items-center">
      <a href="/admin/orders" class="btn btn-secondary mr-2">
        <i class="fas fa-arrow-left"></i> Back to Orders
      </a>
      <% if (order.pay_method === "wallet" && walletTransactionId || order.status==="return_allowed") { %>
      <a href="/admin/wallet-transactions/<%= walletTransactionId %>" class="btn btn-primary">
        Transaction <i class="fas fa-arrow-right"></i>
      </a>
      <% } %>
    </div>
  </div>

  <p class="mb-4">
    View and manage the details of this order below.
  </p>

  <!-- Order Details Card -->
  <div class="card shadow mb-4">
    <div class="card-header py-3">
      <h6 class="m-0 font-weight-bold text-primary">Order Information</h6>
    </div>
    <div class="card-body">
      <div class="row">
        <div class="col-md-6">
          <p><strong>Order Number:</strong> <%= order.order_number %></p>
          <p><strong>User ID:</strong> <%= order.user_id._id %></p> <p><strong>Subtotal Amount:</strong> <%= order.amount %></p> <p><strong>Delivery Charge:</strong> <%= order.delivery_charge %></p>
          <p><strong>Total Amount:</strong> <%= parseFloat(order.total_amount.toString()).toFixed(2) %></p> <p><strong>Payment ID:</strong> <%= order.payment_id %></p> </div>
        <div class="col-md-6">
          <p>
            <strong>Status:</strong>
            <% if (order.status === 'confirmed') { %>
            <span class="badge badge-success">Confirmed</span>
            <% } else if (order.status === 'shipped' || order.status === 'intransit') { %> <span class="badge badge-primary"><%= order.status === 'shipped' ? 'Shipped' : 'In Transit' %></span>
            <% } else if (order.status === 'delivered') { %>
            <span class="badge badge-info">Delivered</span>
            <% } else if (order.status === 'cancelled') { %>
            <span class="badge badge-danger">Cancelled</span>
            <% } else { %>
            <span class="badge badge-warning"><%= order.status %></span>
            <% } %>
          </p>
          <p><strong>Expected Delivery Date:</strong> <%= order.delivery_date ? new Date(order.delivery_date).toLocaleDateString() : 'N/A' %></p> <p><strong>Order Placed At:</strong> <%= new Date(order.createdAt).toLocaleString() %></p>
          <p><strong>Payment Type:</strong> <%= order.pay_method %></p> 
        </div>
      </div>
      <hr />



      <!-- User and Delivery Details Section -->
<h6>User and Delivery Details</h6>
<div class="row mb-3">
  <div class="col-md-6">
    <p><strong>User Name:</strong> <%= order.user_id ? order.user_id.name : 'N/A' %></p>
    <p><strong>Email:</strong> <%= order.user_id ? order.user_id.email : 'N/A' %></p>
    <p><strong>Phone:</strong> <%= order.user_id && order.user_id.phone ? order.user_id.phone : 'N/A' %></p>
  </div>
  <div class="col-md-6">
    <p><strong>Delivery Address:</strong></p>
    <p>
      <%= order.address_id ? 
          `${order.address_id.apartment}${order.address_id.building ? ', ' + order.address_id.building : ''}, 
           ${order.address_id.street}, ${order.address_id.city}, 
           ${order.address_id.state}, ${order.address_id.country} - ${order.address_id.zip_code}` 
          : 'N/A' %>
    </p>
  </div>
</div>
<hr />
  
      <h6>Order Items</h6>
      <ul class="list-group mb-3">
        <% if (order.order_items && order.order_items.length > 0) { %>
          <% order.order_items.forEach((item, index) => { %>
            <% if (item.variant_id) { %> <li class="list-group-item d-flex justify-content-between align-items-center">
                <div class="d-flex align-items-center">
                  <% if (item.variant_id.product_image && item.variant_id.product_image.length > 0) { %>
                    <img src="<%= item.variant_id.product_image[0] %>" alt="Product Image" class="img-thumbnail mr-3" style="width: 60px; height: 60px; object-fit: cover;">
                  <% } else { %>
                    <div class="img-thumbnail mr-3 text-center d-flex align-items-center justify-content-center" style="width: 60px; height: 60px; background-color: #f8f9fa;">
                      <small>No Image</small>
                    </div>
                  <% } %>
                  <div>
                    <h6 class="my-0"><%= item.variant_id.product_id ? item.variant_id.product_id.name : 'Product Name Unavailable' %></h6>
                    <small class="text-muted">
                      Variant:
                      Color: <%= item.variant_id.color || 'N/A' %>,
                      Size: <%= item.variant_id.size || 'N/A' %>
                      <% if (item.variant_id.material) { %> , Material: <%= item.variant_id.material %><% } %>
                      <br>
                      SKU: <%= item.variant_id.sku || 'N/A' %>
                    </small>
                    <br>
                    <small>Status: <%= item.status %></small> </div>
                </div>
                <div>
                  <span>Qty: <%= item.quantity %></span><br>
                  <span class="text-muted">@ ₹<%= item.price.toFixed(2) %></span><br> <strong>Total: ₹<%= item.total_price.toFixed(2) %></strong>
                </div>
              </li>
            <% } else { %>
               <li class="list-group-item">Item <%= index + 1 %>: Variant data missing (ID: <%= item._id %>)</li>
            <% } %>
          <% }) %>
        <% } else { %>
          <li class="list-group-item">No items found for this order.</li>
        <% } %>
      </ul>
      <hr />
  
      <h6>Additional Details</h6>
      <p><strong>Refunded Amount:</strong> ₹<%= parseFloat(order.refunded_amount.toString()).toFixed(2) %></p>
      <p><strong>Cancelled At:</strong> <%= order.cancelled_at ? new Date(order.cancelled_at).toLocaleString() : 'Not Cancelled' %></p>
      <% if (order.cancellation_reason) { %>
          <p><strong>Cancellation Reason:</strong> <%= order.cancellation_reason %></p>
      <% } %>
      <p><strong>Coupon Applied:</strong> <%= order.coupon_id ? order.coupon_id : 'None' %></p> <p><strong>Offer Applied:</strong> <%= order.offer_id ? order.offer_id : 'None' %></p> </div>
  </div>

  <!-- Actions Card -->
  <div class="card shadow mb-4">
    <div class="card-header py-3">
      <h6 class="m-0 font-weight-bold text-primary">Order Actions</h6>
    </div>
    <div class="card-body">
      <div class="d-flex flex-column gap-3"> <%# Use flex-column and gap for spacing %>
  
        <%# Section 1: Show standard Update/Cancel buttons only if the order is in a state where these actions make sense %>
        <% if (['confirmed', 'intransit'].includes(order.status)) { %>
          <div> <%# Group related actions %>
            <strong>Standard Actions:</strong>
            <div class="d-flex gap-2 mt-1">
              <button
                class="btn btn-primary btn-sm" <%# Smaller buttons? %>
                data-toggle="modal"
                data-target="#updateStatusModal"
              >
                <i class="fas fa-wrench"></i> Update Status
              </button>
              <button
                class="btn btn-danger btn-sm" <%# Smaller buttons? %>
                onclick="cancelOrder('<%= order._id %>')"
              >
                <i class="fas fa-times"></i> Cancel Order
              </button>
            </div>
          </div>
        <% } %>
  
        <%# Section 2: Show Return Request details and actions specifically when status is 'return_requested' %>
        <% if (order.status === 'return_requested') { %>
          <div> <%# Group related actions %>
            <strong>Return Request Management:</strong>
            <% if (order.return_reason) { %>
              <p class="mt-1 mb-1">
                  <strong>Reason Provided:</strong>
                  <span class="text-info"><%= order.return_reason %></span>
              </p>
            <% } else { %>
               <p class="mt-1 mb-1 text-muted">Return reason not provided.</p>
            <% } %>
            <div class="d-flex gap-2 mt-1">
               <button
                  class="btn btn-success btn-sm" <%# Use success color for allow %>
                  onclick="handleReturn('<%= order._id %>', 'return_allowed')" <%# JS function to update status %>
                >
                  <i class="fas fa-check"></i> Allow Return
               </button>
               <button
                  class="btn btn-warning btn-sm" 
                  onclick="handleReturn('<%= order._id %>', 'no_return')" <%# Or maybe back to 'delivered' if rejected? Define rejection status %>
               >
                  <i class="fas fa-ban"></i> Reject Return <%# Added a reject option %>
               </button>
            </div>
          </div>
        <% } %>
  
        <%# Section 3: Optional - Display a message for states with no actions %>
         <% if (['delivered', 'cancelled', 'return_allowed'].includes(order.status) && order.status !== 'return_requested') { %>
           <p class="text-muted mb-0">No further actions available for status: <strong><%= order.status %></strong>.</p>
         <% } %>
  
      </div>
    </div>
  </div>
  
</div>
<!-- /.container-fluid -->

<!-- Bootstrap Modal for Updating Order Status -->
<div
  class="modal fade"
  id="updateStatusModal"
  tabindex="-1"
  role="dialog"
  aria-labelledby="updateStatusLabel"
  aria-hidden="true"
>
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="updateStatusLabel">Update Order Status</h5>
        <button
          type="button"
          class="close"
          data-dismiss="modal"
          aria-label="Close"
        >
          <span aria-hidden="true">×</span>
        </button>
      </div>
      <form action="/admin/updateOrderStatus" method="POST">
        <div class="modal-body">
          <input type="hidden" name="id" value="<%= order._id %>" />
          <div class="form-group">
            <label for="orderStatus">Status</label>
            <select class="form-control" id="orderStatus" name="status" required>
              <option value="confirmed" <%= order.status === 'confirmed' ? 'selected' : '' %>>Confirmed</option>
              <option value="intransit" <%= order.status === 'intransit' ? 'selected' : '' %>>In Transit</option>
              <option value="delivered" <%= order.status === 'delivered' ? 'selected' : '' %>>Delivered</option>
            </select>
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-dismiss="modal">
            Cancel
          </button>
          <button type="submit" class="btn btn-primary">Update Status</button>
        </div>
      </form>
    </div>
  </div>
</div>

<!-- JavaScript for Cancel Order -->
<script>

  function cancelOrder(orderId) {
    Swal.fire({
      title: "Are you sure?",
      text: "This will cancel the order. This action cannot be undone.",
      icon: "warning",
      showCancelButton: true,
      confirmButtonColor: "#3085d6",
      cancelButtonColor: "#d33",
      confirmButtonText: "Yes, cancel it!",
    }).then((result) => {
      if (result.isConfirmed) {
        fetch("/admin/cancelOrder", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ id: orderId }),
        })
          .then((response) => {
            if (!response.ok) throw new Error("Failed to cancel order");
            return response.json();
          })
          .then((result) => {
            if (result.success) {
              Swal.fire("Cancelled!", "Order has been cancelled.", "success").then(
                () => window.location.reload()
              );
            } else {
              Swal.fire("Error!", result.message || "Failed to cancel order", "error");
            }
          })
          .catch((error) => {
            console.error("Error:", error);
            Swal.fire("Error!", "An error occurred while cancelling the order", "error");
          });
      }
    });
  }


  function handleReturn(orderId, newStatus) {
    // Logic to confirm and call the backend to update the status
    // to 'return_allowed' or handle the rejection ('delivered' or another status)
  
    const actionText = newStatus === 'return_allowed' ? 'allow' : 'reject';
    Swal.fire({
        title: `Confirm Return ${actionText.charAt(0).toUpperCase() + actionText.slice(1)}`,
        text: `Are you sure you want to ${actionText} the return request for order ${orderId}?`,
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: `Yes, ${actionText} it!`
    }).then((result) => {
        if (result.isConfirmed) {
          fetch(`/admin/updateOrderStatus`, {
  method: 'POST',
  headers: {
    'Content-Type': 'application/json',
  },
  body: JSON.stringify({ id: orderId, status: newStatus }),
})
  .then((response) => {
    if (!response.ok) {
      // Handle non-2xx responses
      return response.json().then((err) => {
        throw new Error(err.message || 'An error occurred while updating the status.');
      });
    }
    return response.json(); // Parse the JSON response
  })
  .then((data) => {
    if (data.success) {
      Swal.fire('Success!', data.message, 'success').then(() => {
        window.location.href = data.redirectUrl; // Redirect to the specified URL
      });
    }
  })
  .catch((error) => {
    console.error('Error updating status:', error);
    Swal.fire('Error!', error.message || 'An error occurred while updating the status.', 'error');
  });
        }
    });
  }
</script>

<!-- Success/Error Notifications -->
<% if (messages.success) { %>
<script>
  const Toast = Swal.mixin({
    toast: true,
    position: "top-end",
    showConfirmButton: false,
    timer: 3000,
    timerProgressBar: true,
    didOpen: (toast) => {
      toast.onmouseenter = Swal.stopTimer;
      toast.onmouseleave = Swal.resumeTimer;
    },
  });
  Toast.fire({
    icon: "success",
    title: "<%= messages.success[0] %>",
  });
</script>
<% } %>

<% if (messages.error) { %>
<script>
  Swal.fire({
    icon: "error",
    title: "Error",
    text: "<%= messages.error[0] %>",
    confirmButtonText: "OK",
  });
</script>
<% } %>

<%- include("../../views/partials/admin/footer.ejs") %>